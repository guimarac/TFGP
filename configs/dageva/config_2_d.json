{

  "serverUrl" : "http://127.0.0.1:8080",
  "dataset" : "winequality-white.csv",
  "killServer": false,

  "numEvaluations": 512,
  "numIndividualsToGenerate": 8,
  "minPopulationSizeToOperate": 4,
  "maxPopulationSize": 128,


  "generatingMaxTreeSize":  20,

  "tournamentBetterWinsProbability" : 0.8,
  "saveBest" : true,

  "basicTypedXover" : {"probability": 0.3 , "maxTreeSize": 50},
  "sameSizeSubtreeMutation" : {"probability": 0.3, "maxSubtreeSize": 10},
  "oneParamMutation" : {"probability" : 0.3, "shiftsWithProbabilities": [[-2, 0.1], [-1, 0.4], [1, 0.4], [2, 0.1]]},
  "copyOp" : {"probability": 0.1},


  "goalType" : "D => LD",

  "lib" : [

    "TypedDag.dia( TypedDag: D => D , TypedDag: D => (V LD n an) , TypedDag: (V LD n an) => LD ) : D => LD",
    "TypedDag.dia0( TypedDag: D => (V LD n an) , TypedDag: (V LD n an) => LD ) : D => LD",
    "TypedDag.split( TypedDag: D => (V D n an) , MyList: V (D => LD) n an ) : D => (V LD n an)",
    "MyList.cons( Object: a , MyList: V a n an ) : V a (S n) an",
    "MyList.nil : V a 0 an",

    "PCA   : D => D",
    "kBest : D => D",
    "kMeans : D => (V D (S(S n)) Disj)",
    "copy   : D => (V D (S(S n)) Copy)",
    "SVC        : D => LD",
    "logR       : D => LD",
    "gaussianNB : D => LD",
    "DT         : D => LD",
    "vote : (V LD (S(S n)) an) => LD",

    "TypedDag.stacking( TypedDag: (V LD n Copy) => D , TypedDag: D => LD ) : (V LD n Copy) => LD",
    "stacker : (V LD (S(S n)) Copy) => D",

    "TypedDag.boosting( TypedDag: D => Boo , MyList: V (Boo => Boo) (S(S n)) an , TypedDag : Boo => LD ) : D => LD",
    "booBegin : D => Boo",
    "TypedDag.booster( TypedDag : D => LD ) : Boo => Boo",
    "booEnd   : Boo => LD"

  ]

}